name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Reduced from 120 - if it takes longer, there's likely an issue
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5  # Updated to v5
      with:
        python-version: '3.11'
        cache: 'pip'  # Cache pip dependencies
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install Python dependencies
      run: |
        # Install core dependencies first
        pip install --upgrade pip
        pip install pygame-ce==2.5.4 pygbag==0.9.2 black
        
        # Install requirements with timeout and retry
        pip install --timeout 300 --retries 3 -r requirements.txt
    
    - name: Configure WASM
      run: |
        mkdir -p ~/.config/pygbag
        echo '{"wasm_mimetype": "application/wasm"}' > ~/.config/pygbag/config.json
    
    - name: Debug Python environment
      run: |
        echo "Python version:"
        python --version
        echo "Installed packages:"
        pip list | grep -E "(pygame|pygbag|numpy)"
        echo "Current directory contents:"
        ls -la
    
    - name: Build for web with verbose output
      run: |
        echo "Starting pygbag build..."
        python -m pygbag --verbose --debug . 2>&1 | tee build.log
        echo "Build completed, checking output..."
      timeout-minutes: 15  # Set specific timeout for build step
    
    - name: Verify build output
      run: |
        echo "Checking build output directory..."
        if [ -d "./dist" ]; then
          echo "Found dist directory:"
          ls -la ./dist/
          BUILD_DIR="./dist"
        elif [ -d "./build/web" ]; then
          echo "Found build/web directory:"
          ls -la ./build/web/
          BUILD_DIR="./build/web"
        else
          echo "No standard build directory found. Checking all directories:"
          find . -name "*.wasm" -o -name "index.html" | head -20
          exit 1
        fi
        
        # Check for required files
        echo "Looking for main.wasm and index.html..."
        find $BUILD_DIR -name "*.wasm" -o -name "index.html"
        
        # Set BUILD_DIR for next step
        echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{ env.BUILD_DIR }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
